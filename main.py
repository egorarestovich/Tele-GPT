import telebot
from g4f import *
from g4f.client import Client
import tokenandmore

client = Client()

TOKEN = tokenandmore.TOKEN

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def main(message):
    full_name = f"{message.from_user.first_name} {message.from_user.last_name}" if message.from_user.last_name else message.from_user.first_name
    bot.send_message(message.chat.id, f"{full_name}, –ü—Ä–∏–≤–µ—Çüëã, —è ChatGPT, –∏ –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã! –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—é, –∏ –≤—ã–±–µ—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å!\n–ï—Å–ª–∏ –±—É–¥—É—Ç –æ—à–∏–±–∫–∏, –Ω–µ —Ä—É–≥–∞–π—Ç–µ –º–µ–Ω—è, —è —Ç–æ–ª—å–∫–æ —É—á—É—Å—åüò£")

def escape_markdown(text):
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown."""
    special_chars = ['_', '*', '[', ']', '(', ')', '~', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!', '?']
    for char in special_chars:
        text = text.replace(char, '\\' + char)
    return text

@bot.message_handler(commands=['zapros'])
def zapros(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å:")
    @bot.message_handler()
    def tochatgpt(message):
        try:
            response = client.chat.completions.create(
                messages=[{"role": "user", "content": message.text.lower()}],
                model="gpt-4o"
            )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ –≤ choices
            if hasattr(response, 'choices') and len(response.choices) > 0:
                reply_text = response.choices[0].message.content
                if reply_text == 'Generated by BLACKBOX.AI, try unlimited chat https://www.blackbox.ai':
                    while reply_text != 'Generated by BLACKBOX.AI, try unlimited chat https://www.blackbox.ai':
                        response = client.chat.completions.create(
                            messages=[{"role": "user", "content": message.text.lower()}],
                            model="gpt-4o"
                        )
                        reply_text = response.choices[0].message.content
                # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown
                reply_text = escape_markdown(reply_text)

                # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
                print(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–π —Ç–µ–∫—Å—Ç: {reply_text}")


                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º parse_mode 'MarkdownV2'
                bot.send_message(message.chat.id, reply_text, parse_mode='MarkdownV2')
            else:
                bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç.")
                print("–û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'choices'.")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        except Exception as e:
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.")
            print(f"–û—à–∏–±–∫–∞: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å

bot.infinity_polling()